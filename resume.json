{
    "name": "Mohammad Hoseinzadeh",
    "title": "Back-End Developer",
    "links": {
        "github": "mhmdhoseinzade",
        "linkedin": "mhmdhoseinzade",
        "website": "https://mhmdhoseinzade.ir"
    },
    "contact": {
        "email": "mohammad.hz.dev@gmail.com",
        "phone": "+989210096317",
        "location": "Tehran, Iran"
    },
    "summary": "Backend developer with 6+ years of experience in Python, Django, FastAPI, Flask, and building scalable microservices. Experienced in Kubernetes, Docker, CI/CD pipelines, and cloud deployments. Passionate about learning, collaborative teamwork, and delivering maintainable, efficient software solutions.",
    "education": [
        {
            "period": "2019-2023",
            "degree": "BSc, Computer Science",
            "institution": "University of Mazandaran"
        }
    ],
    "experience": [
        {
            "company": "Runflare.com",
            "period": "Dec 2019 - Oct 2022",
            "position": "Back-End Developer at Runflare",
            "achievements": [
                {
                    "text": "Designed and architected the Runflare PaaS platform using Django and Django REST Framework, increasing API response times by 20% through optimized database queries and caching strategies.",
                    "tags": ["Django", "Django REST Framework", "PaaS", "Platform Design"]
                },
                {
                    "text": "Leveraged Kubernetes entities, functions, and cloud service concepts to orchestrate and manage containerized applications.",
                    "tags": ["Kubernetes", "Container Orchestration", "Cloud Services", "DevOps"]
                },
                {
                    "text": "Implemented CI/CD pipelines for automated deployments from GitHub and GitLab.",
                    "tags": ["CI/CD", "Automation", "GitHub", "GitLab", "Deployment"]
                },
                {
                    "text": "Published the Runflare CLI on PyPI, reducing user deployment time by 70% with a single command.",
                    "tags": ["CLI", "PyPI", "Performance", "User Experience", "70% Improvement"]
                },
                {
                    "text": "Developed and optimized the backup system, cutting data recovery time from 30 minutes to 15 minutes.",
                    "tags": ["Backup System", "Data Recovery", "Optimization", "Performance", "50% Improvement"]
                },
                {
                    "text": "Converted a monolithic architecture to microservices using FastAPI, Flask, and mainly Django. Integrated Go in certain components to enhance Kubernetes integration.",
                    "tags": ["Microservices", "Architecture", "FastAPI", "Flask", "Django", "Go", "Kubernetes"]
                },
                {
                    "text": "Designed and implemented full system restore mechanisms for critical failure scenarios.",
                    "tags": ["System Restore", "Disaster Recovery", "Critical Systems", "Reliability"]
                },
                {
                    "text": "Implemented Harbor registry to store and retrieve user container images efficiently.",
                    "tags": ["Harbor Registry", "Container Images", "Storage", "Efficiency"]
                },
                {
                    "text": "Integrated Redis caching and Celery for background task processing, improving response times and reducing request latency by 40%.",
                    "tags": ["Redis", "Caching", "Celery", "Background Tasks", "Performance", "40% Improvement"]
                },
                {
                    "text": "Built an internal CRM system to improve user experience and customer management.",
                    "tags": ["CRM", "User Experience", "Customer Management", "Internal Tools"]
                },
                {
                    "text": "Built a monitoring and alerting system, accelerating issue detection and resolution.",
                    "tags": ["Monitoring", "Alerting", "Issue Detection", "System Reliability"]
                },
                {
                    "text": "Wrote automated tests and performed code refactoring to improve code quality and maintainability.",
                    "tags": ["Testing", "Code Quality", "Refactoring", "Maintainability", "Best Practices"]
                },
                {
                    "text": "Obtained knowledge-based certification for the product and fulfilled mandatory military service through the Amriyeh Program (alternative service for tech professionals).",
                    "tags": ["Certification", "Military Service", "Amriyeh Program", "Professional Development"]
                }
            ]
        },
        {
            "company": "Runflare.com",
            "period": "Mar 2023 â€“ Present",
            "position": "Back-End Developer / Team Lead",
            "achievements": [
                {
                    "text": "Led the backend development team, performed code reviews, and guided best practices",
                    "tags": ["Team Leadership", "Code Reviews", "Best Practices", "Mentoring"]
                },
                {
                    "text": "Developed and enhanced the backup system, reducing infrastructure costs by 20% through a new architectural approach.",
                    "tags": ["Backup System", "Cost Optimization", "Architecture", "20% Cost Reduction"]
                },
                {
                    "text": "Rewrote the Runflare CLI in Go, improving performance, maintainability, and cross-platform support.",
                    "tags": ["Go", "CLI", "Performance", "Maintainability", "Cross-platform"]
                },
                {
                    "text": "Implemented a monitoring system with the ELK stack (Elasticsearch, Logstash, Kibana) to detect bottlenecks and hidden issues, improving disaster response times by 35% and reducing downtime.",
                    "tags": ["ELK Stack", "Elasticsearch", "Logstash", "Kibana", "Monitoring", "35% Improvement", "Downtime Reduction"]
                },
                {
                    "text": "Added WebSocket support to enable real-time communication between users.",
                    "tags": ["WebSocket", "Real-time Communication", "User Experience"]
                },
                {
                    "text": "Engineered RabbitMQ infrastructure for background task processing and event-driven communication, achieving 25% reduction in response latency.",
                    "tags": ["RabbitMQ", "Background Tasks", "Event-driven", "Performance", "25% Improvement"]
                },
                {
                    "text": "Revamped the backup core architecture, reducing backup processing time by 30%.",
                    "tags": ["Backup Optimization", "Performance", "30% Improvement"]
                },
                {
                    "text": "Engineered robust, database-specific backup solutions using Bash and Python scripting, safeguarding critical data across PostgreSQL, MySQL, MongoDB, and Redis databases while mentoring 3 junior developers on the team.",
                    "tags": ["PostgreSQL", "MySQL", "MongoDB", "Redis", "Database Management", "Automated Backups"]
                },
                {
                    "text": "Resolved builder-related issues, increased system stability, and boosted build speed by 50%.",
                    "tags": ["System Stability", "Build Optimization", "Performance", "50% Improvement"]
                },
                {
                    "text": "Achieved a 10x increase in deployment speed for users updating their website versions.",
                    "tags": ["Deployment Speed", "Performance", "10x Improvement", "User Experience"]
                },
                {
                    "text": "Integrated an AI-powered RAG (Retrieval-Augmented Generation) system to answer users' technical questions.",
                    "tags": ["AI", "RAG", "Machine Learning", "User Support", "Technical Questions"]
                }
            ]
        }
    ],
    "skills": {
        "languages": ["Python"],
        "frameworks": ["Django", "FastAPI", "Flask"],
        "devops": ["Docker", "Kubernetes", "CI/CD", "GitLab", "GitHub Actions"],
        "databases": ["PostgreSQL", "MySQL", "MongoDB", "Redis", "Elastic"],
        "soft": ["Critical Thinking", "Curiosity", "Emotional Management", "Team-work"]
    }
}
